"use strict";(self.webpackChunkmy_docs=self.webpackChunkmy_docs||[]).push([[167],{6991:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>o,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"api/Asset/crud","title":"","description":"Asset CRUD API","source":"@site/docs/api/Asset/crud.md","sourceDirName":"api/Asset","slug":"/api/Asset/crud","permalink":"/API-Doc/api/Asset/crud","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"","pagination_next":null,"pagination_prev":null},"sidebar":"apiSidebar"}');var a=n(4848),r=n(8453);const i={title:"",pagination_next:null,pagination_prev:null},l=void 0,o={},d=[{value:"<span>Release Versions</span>",id:"release-versions",level:2},{value:"<span>Authentication - Login API</span>",id:"authentication---login-api",level:2},{value:"Endpoint Details",id:"endpoint-details",level:3},{value:"Request Body",id:"request-body",level:3},{value:"Response Body",id:"response-body",level:3},{value:"<span>Create Asset API</span>",id:"create-asset-api",level:2},{value:"Request Body",id:"request-body-1",level:3},{value:"Example Response",id:"example-response",level:3},{value:"<span>Create Asset Type API</span>",id:"create-asset-type-api",level:2},{value:"Endpoint Details",id:"endpoint-details-1",level:3},{value:"Request Headers",id:"request-headers",level:3},{value:"Request Body",id:"request-body-2",level:3},{value:"Example Response",id:"example-response-1",level:3},{value:"<span>Update Asset API</span>",id:"update-asset-api",level:2},{value:"Request Body",id:"request-body-3",level:3},{value:"Example Response",id:"example-response-2",level:3},{value:"<span>List Assets API</span>",id:"list-assets-api",level:2},{value:"Endpoint Details",id:"endpoint-details-2",level:3},{value:"Request Headers",id:"request-headers-1",level:3},{value:"Request Body",id:"request-body-4",level:3},{value:"Example Response",id:"example-response-3",level:3},{value:"<span>Get Asset Route API</span>",id:"get-asset-route-api",level:2},{value:"Endpoint Details",id:"endpoint-details-3",level:3},{value:"Request Headers",id:"request-headers-2",level:3},{value:"Request Body",id:"request-body-5",level:3},{value:"Example Input",id:"example-input",level:3},{value:"Example Response",id:"example-response-4",level:3},{value:"<span>List Asset Types at Locations API</span>",id:"list-asset-types-at-locations-api",level:2},{value:"Request Body",id:"request-body-6",level:3},{value:"Example Response",id:"example-response-5",level:3},{value:"<span>List Asset Types Counts at Locations API</span>",id:"list-asset-types-counts-at-locations-api",level:2},{value:"Request Body",id:"request-body-7",level:3},{value:"Example Response",id:"example-response-6",level:3},{value:"<span>Asset Management Postman Collection</span>",id:"asset-management-postman-collection",level:2},{value:"<span>Errors</span>",id:"errors",level:2},{value:"Error Responses",id:"error-responses",level:4}];function p(t){const e={code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...t.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("h1",{style:{color:"#004FDB"},children:"Asset CRUD API"}),"\n",(0,a.jsx)("h2",{children:"Version 1.1 \u2014 August 2024"}),"\n",(0,a.jsx)(e.hr,{}),"\n",(0,a.jsx)(e.h2,{id:"release-versions",children:(0,a.jsx)("span",{style:{color:"#004FDB"},children:"Release Versions"})}),"\n",(0,a.jsxs)(e.table,{children:[(0,a.jsx)(e.thead,{children:(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.th,{children:"Version"}),(0,a.jsx)(e.th,{children:"Description"}),(0,a.jsx)(e.th,{children:"Author"}),(0,a.jsx)(e.th,{children:"Release Date"})]})}),(0,a.jsxs)(e.tbody,{children:[(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"1.0"}),(0,a.jsx)(e.td,{children:"List API for Assets"}),(0,a.jsx)(e.td,{children:"George Gu"}),(0,a.jsx)(e.td,{children:"05/28/2024"})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"1.1"}),(0,a.jsx)(e.td,{children:"Create & Update Asset APIs"}),(0,a.jsx)(e.td,{children:"Renuka Agrawal"}),(0,a.jsx)(e.td,{children:"08/16/2024"})]})]})]}),"\n",(0,a.jsx)(e.hr,{}),"\n",(0,a.jsx)(e.h2,{id:"authentication---login-api",children:(0,a.jsx)("span",{style:{color:"#004FDB"},children:"Authentication - Login API"})}),"\n",(0,a.jsx)(e.p,{children:"To access the GraphQL APIs, users must first authenticate using the Xemelgo Login REST API."}),"\n",(0,a.jsx)(e.h3,{id:"endpoint-details",children:"Endpoint Details"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"URL:"})," ",(0,a.jsx)(e.code,{children:"https://rest.api.xemelgo.com/login"})]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Method:"})," ",(0,a.jsx)(e.code,{children:"POST"})]}),"\n"]}),"\n",(0,a.jsx)(e.h3,{id:"request-body",children:"Request Body"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n  "email": "base64_encoded_email",\n  "password": "base64_encoded_password"\n}\n'})}),"\n",(0,a.jsx)(e.h3,{id:"response-body",children:"Response Body"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n  "AccessToken": "token123",\n  "ExpiresIn": 3600,\n  "TokenType": "Bearer",\n  "RefreshToken": "refreshToken",\n  "IdToken": "idToken123"\n}\n'})}),"\n",(0,a.jsxs)(e.p,{children:["Use the ",(0,a.jsx)(e.code,{children:"IdToken"})," as the authorization header for all API requests."]}),"\n",(0,a.jsx)(e.hr,{}),"\n",(0,a.jsx)(e.h2,{id:"create-asset-api",children:(0,a.jsx)("span",{style:{color:"#004FDB"},children:"Create Asset API"})}),"\n",(0,a.jsx)(e.h3,{id:"request-body-1",children:"Request Body"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-graphql",children:'mutation {\n  createAssets(input: {\n    assets: [\n      {\n        id: "Asset-BIN-02",\n        trackerSerial: "20240725000004",\n        typeId: "Handheld",\n        dueDate: 1725047723000,\n        locationId: "Room 2"\n      }\n    ]\n  }) {\n    assetIds\n  }\n}\n'})}),"\n",(0,a.jsx)(e.h3,{id:"example-response",children:"Example Response"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n  "data": {\n    "createAssets": {\n      "assetIds": ["Asset-BIN-02"]\n    }\n  }\n}\n'})}),"\n",(0,a.jsx)(e.hr,{}),"\n",(0,a.jsx)(e.h2,{id:"create-asset-type-api",children:(0,a.jsx)("span",{style:{color:"#004FDB"},children:"Create Asset Type API"})}),"\n",(0,a.jsx)(e.h3,{id:"endpoint-details-1",children:"Endpoint Details"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"URL:"})," ",(0,a.jsx)(e.code,{children:"https://api.xemelgo.com/graphql"})]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Method:"})," ",(0,a.jsx)(e.code,{children:"POST"})]}),"\n"]}),"\n",(0,a.jsx)(e.h3,{id:"request-headers",children:"Request Headers"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-http",children:"Authorization: Bearer {IdToken}\n"})}),"\n",(0,a.jsx)(e.h3,{id:"request-body-2",children:"Request Body"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-graphql",children:'mutation {\n  createAssetTypes(input: {\n    inputList: [\n      {\n        id: "AssetType-1",\n        name: "Electronics",\n        description: "Electronics category"\n      }\n    ]\n  }) {\n    assetTypeIds\n  }\n}\n'})}),"\n",(0,a.jsx)(e.h3,{id:"example-response-1",children:"Example Response"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n  "data": {\n    "createAssetTypes": {\n      "assetTypeIds": ["AssetType-1"]\n    }\n  }\n}\n'})}),"\n",(0,a.jsx)(e.hr,{}),"\n",(0,a.jsx)(e.h2,{id:"update-asset-api",children:(0,a.jsx)("span",{style:{color:"#004FDB"},children:"Update Asset API"})}),"\n",(0,a.jsx)(e.h3,{id:"request-body-3",children:"Request Body"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-graphql",children:'mutation {\n  updateAssets(input: {\n    assets: [\n      {\n        id: "Asset-BIN-02",\n        dueDate: 1725047723000,\n        locationId: "Room 2"\n      }\n    ]\n  }) {\n    assets {\n      id\n      dueDate\n      locationId\n    }\n  }\n}\n'})}),"\n",(0,a.jsx)(e.h3,{id:"example-response-2",children:"Example Response"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n  "data": {\n    "updateAssets": {\n      "assets": [\n        {\n          "id": "Asset-BIN-02",\n          "dueDate": 1725047723000,\n          "locationId": "Room 2"\n        }\n      ]\n    }\n  }\n}\n'})}),"\n",(0,a.jsx)(e.hr,{}),"\n",(0,a.jsx)(e.h2,{id:"list-assets-api",children:(0,a.jsx)("span",{style:{color:"#004FDB"},children:"List Assets API"})}),"\n",(0,a.jsx)(e.p,{children:"The List Assets API retrieves all asset details and allows filtering."}),"\n",(0,a.jsx)(e.h3,{id:"endpoint-details-2",children:"Endpoint Details"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"URL:"})," ",(0,a.jsx)(e.code,{children:"https://api.xemelgo.com/graphql"})]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Method:"})," ",(0,a.jsx)(e.code,{children:"POST"})]}),"\n"]}),"\n",(0,a.jsx)(e.h3,{id:"request-headers-1",children:"Request Headers"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-http",children:"Authorization: Bearer {IdToken}\n"})}),"\n",(0,a.jsx)(e.h3,{id:"request-body-4",children:"Request Body"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-graphql",children:"query assets ($filter: String, $nextToken: String) {\n  assets (input: {filter: $filter, nextToken: $nextToken}) {\n    nextToken\n    assets {\n      id\n      name\n      description\n      trackerSerial\n      state\n      type {\n        name\n        id\n      }\n      lastUpdatedDate\n      lastDetectedAtLocation {\n        id\n        name\n      }\n    }\n  }\n}\n"})}),"\n",(0,a.jsx)(e.h3,{id:"example-response-3",children:"Example Response"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n  "data": {\n    "assets": {\n      "nextToken": null,\n      "assets": [\n        {\n          "id": "Asset Test 01",\n          "trackerSerial": "E280689400005013D8128491",\n          "state": "onhand",\n          "type": { "name": "Type 1", "id": "Type 1" },\n          "lastDetectedAtLocation": { "id": "Shop Floor", "name": "Shop Floor" }\n        }\n      ]\n    }\n  }\n}\n'})}),"\n",(0,a.jsx)(e.hr,{}),"\n",(0,a.jsx)(e.h2,{id:"get-asset-route-api",children:(0,a.jsx)("span",{style:{color:"#004FDB"},children:"Get Asset Route API"})}),"\n",(0,a.jsx)(e.p,{children:"The Get Asset Route API retrieves asset details and status updates."}),"\n",(0,a.jsx)(e.h3,{id:"endpoint-details-3",children:"Endpoint Details"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"URL:"})," ",(0,a.jsx)(e.code,{children:"https://api.xemelgo.com/graphql"})]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Method:"})," ",(0,a.jsx)(e.code,{children:"POST"})]}),"\n"]}),"\n",(0,a.jsx)(e.h3,{id:"request-headers-2",children:"Request Headers"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-http",children:"Authorization: Bearer {IdToken}\n"})}),"\n",(0,a.jsx)(e.h3,{id:"request-body-5",children:"Request Body"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-graphql",children:"query assetRoute($id: String!, $startDate: AWSTimestamp, $endDate: AWSTimestamp) {\n  assetRoute(input: { id: $id, startDate: $startDate, endDate: $endDate }) {\n    route {\n      location {\n        id\n        name\n      }\n      state\n      startDate\n      endDate\n      duration\n    }\n  }\n}\n"})}),"\n",(0,a.jsx)(e.h3,{id:"example-input",children:"Example Input"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n  "id": "120",\n  "startDate": 1719730800000,\n  "endDate": 1719903600000\n}\n'})}),"\n",(0,a.jsx)(e.h3,{id:"example-response-4",children:"Example Response"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n  "data": {\n    "assetRoute": {\n      "route": [\n        {\n          "location": { "id": "LU3000EX", "name": "LU3000EX" },\n          "state": "onhand",\n          "startDate": 1719864278922,\n          "endDate": 1719864496290,\n          "duration": 217368\n        }\n      ]\n    }\n  }\n}\n'})}),"\n",(0,a.jsx)(e.hr,{}),"\n",(0,a.jsx)(e.h2,{id:"list-asset-types-at-locations-api",children:(0,a.jsx)("span",{style:{color:"#004FDB"},children:"List Asset Types at Locations API"})}),"\n",(0,a.jsx)(e.p,{children:"Retrieves all asset types at locations and their statuses."}),"\n",(0,a.jsx)(e.h3,{id:"request-body-6",children:"Request Body"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-graphql",children:"query assetTypeMetrics ($filter: String, $nextToken: String) {\n  assetTypeMetrics(input: {filter: $filter, nextToken: $nextToken}) {\n    nextToken\n    assetTypes {\n      id\n      name\n      missingCount\n      dueSoonCount\n      overdueCount\n      onhandCount\n      totalCount\n      location {\n        id\n        name\n      }\n      type {\n        id\n        name\n        description\n        customProperties\n      }\n    }\n  }\n}\n"})}),"\n",(0,a.jsx)(e.h3,{id:"example-response-5",children:"Example Response"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n  "data": {\n    "assetTypeMetrics": {\n      "nextToken": null,\n      "assetTypes": [\n        {\n          "id": "Type-1",\n          "name": "Electronics",\n          "onhandCount": 50,\n          "location": { "id": "Warehouse-A", "name": "Warehouse A" }\n        }\n      ]\n    }\n  }\n}\n'})}),"\n",(0,a.jsx)(e.hr,{}),"\n",(0,a.jsx)(e.h2,{id:"list-asset-types-counts-at-locations-api",children:(0,a.jsx)("span",{style:{color:"#004FDB"},children:"List Asset Types Counts at Locations API"})}),"\n",(0,a.jsx)(e.p,{children:"Retrieves total asset type counts at locations."}),"\n",(0,a.jsx)(e.h3,{id:"request-body-7",children:"Request Body"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-graphql",children:"query assetTypeLocationMetrics ($filter: String, $nextToken: String) {\n  assetTypeLocationMetrics(input: {filter: $filter, nextToken: $nextToken}) {\n    nextToken\n    assetTypes {\n      totalCount\n      location {\n        id\n        name\n      }\n    }\n  }\n}\n"})}),"\n",(0,a.jsx)(e.h3,{id:"example-response-6",children:"Example Response"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n  "data": {\n    "assetTypeLocationMetrics": {\n      "nextToken": null,\n      "assetTypes": [\n        {\n          "totalCount": 100,\n          "location": { "id": "Warehouse-A", "name": "Warehouse A" }\n        }\n      ]\n    }\n  }\n}\n'})}),"\n",(0,a.jsx)(e.hr,{}),"\n",(0,a.jsx)(e.h2,{id:"asset-management-postman-collection",children:(0,a.jsx)("span",{style:{color:"#004FDB"},children:"Asset Management Postman Collection"})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n\t"info": {\n\t\t"_postman_id": "e98291b9-00d5-428d-ba99-78d7052f47a4",\n\t\t"name": "Asset Management Collection",\n\t\t"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",\n\t\t"_exporter_id": "14257901"\n\t},\n\t"item": [\n\t\t{\n\t\t\t"name": "Login",\n\t\t\t"event": [\n\t\t\t\t{\n\t\t\t\t\t"listen": "prerequest",\n\t\t\t\t\t"script": {\n\t\t\t\t\t\t"exec": [\n\t\t\t\t\t\t\t"var emailId = \\"base 64 encoded email\\";",\n\t\t\t\t\t\t\t"var pass = \\"base 64 encoded password\\";",\n\t\t\t\t\t\t\t"",\n\t\t\t\t\t\t\t"pm.environment.set(\\"email\\", btoa(emailId));",\n\t\t\t\t\t\t\t"pm.environment.set(\\"password\\", btoa(pass));"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t"type": "text/javascript",\n\t\t\t\t\t\t"packages": {}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"listen": "test",\n\t\t\t\t\t"script": {\n\t\t\t\t\t\t"exec": [\n\t\t\t\t\t\t\t"var jsonData = JSON.parse(responseBody);",\n\t\t\t\t\t\t\t"pm.environment.set(\\"token\\", jsonData.IdToken);"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t"type": "text/javascript",\n\t\t\t\t\t\t"packages": {}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t],\n\t\t\t"request": {\n\t\t\t\t"auth": {\n\t\t\t\t\t"type": "noauth"\n\t\t\t\t},\n\t\t\t\t"method": "POST",\n\t\t\t\t"header": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"key": "scenario",\n\t\t\t\t\t\t"value": "1",\n\t\t\t\t\t\t"type": "text",\n\t\t\t\t\t\t"disabled": true\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t"body": {\n\t\t\t\t\t"mode": "raw",\n\t\t\t\t\t"raw": "{\\n    \\"email\\": \\"{{email}}\\",\\n    \\"password\\": \\"{{password}}\\"\\n}",\n\t\t\t\t\t"options": {\n\t\t\t\t\t\t"raw": {\n\t\t\t\t\t\t\t"language": "json"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t"url": {\n\t\t\t\t\t"raw": "https://rest.api.xemelgo.com/login",\n\t\t\t\t\t"protocol": "https",\n\t\t\t\t\t"host": [\n\t\t\t\t\t\t"rest",\n\t\t\t\t\t\t"api",\n\t\t\t\t\t\t"xemelgo",\n\t\t\t\t\t\t"com"\n\t\t\t\t\t],\n\t\t\t\t\t"path": [\n\t\t\t\t\t\t"login"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t"response": []\n\t\t},\n\t\t{\n\t\t\t"name": "Create Asset Type",\n\t\t\t"request": {\n\t\t\t\t"auth": {\n\t\t\t\t\t"type": "noauth"\n\t\t\t\t},\n\t\t\t\t"method": "POST",\n\t\t\t\t"header": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"key": "Authorization",\n\t\t\t\t\t\t"value": "{{token}}",\n\t\t\t\t\t\t"type": "text"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t"body": {\n\t\t\t\t\t"mode": "graphql",\n\t\t\t\t\t"graphql": {\n\t\t\t\t\t\t"query": "mutation {\\n    createAssetTypes(\\n        input: {\\n            inputList: [ \\n            { \\n                id: \\"AssetType-1\\", \\n                number: \\"AssetType-1\\", \\n                name: \\"AssetType-1\\", \\n                description: \\"test asset type\\" \\n                quantity: 2  \\n            } \\n           ]\\n        }\\n    ) {\\n        assetTypeIds\\n    }\\n}",\n\t\t\t\t\t\t"variables": ""\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t"url": {\n\t\t\t\t\t"raw": "https://api.xemelgo.com/graphql",\n\t\t\t\t\t"protocol": "https",\n\t\t\t\t\t"host": [\n\t\t\t\t\t\t"api",\n\t\t\t\t\t\t"xemelgo",\n\t\t\t\t\t\t"com"\n\t\t\t\t\t],\n\t\t\t\t\t"path": [\n\t\t\t\t\t\t"graphql"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t"response": []\n\t\t},\n\t\t{\n\t\t\t"name": "Update Asset Type",\n\t\t\t"request": {\n\t\t\t\t"auth": {\n\t\t\t\t\t"type": "noauth"\n\t\t\t\t},\n\t\t\t\t"method": "POST",\n\t\t\t\t"header": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"key": "Authorization",\n\t\t\t\t\t\t"value": "{{token}}",\n\t\t\t\t\t\t"type": "text"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t"body": {\n\t\t\t\t\t"mode": "graphql",\n\t\t\t\t\t"graphql": {\n\t\t\t\t\t\t"query": "mutation {\\n    updateAssetTypes(\\n        input: {\\n            inputList: [ \\n            { \\n                id: \\"AssetType-1\\", \\n                number: \\"AssetType-1\\", \\n                name: \\"AssetType-1\\", \\n                description: \\"test asset type\\" \\n                unit: \\"EA\\"\\n            } \\n           ]\\n        }\\n    ) {\\n        assetTypeIds\\n    }\\n}",\n\t\t\t\t\t\t"variables": ""\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t"url": {\n\t\t\t\t\t"raw": "https://api.xemelgo.com/graphql",\n\t\t\t\t\t"protocol": "https",\n\t\t\t\t\t"host": [\n\t\t\t\t\t\t"api",\n\t\t\t\t\t\t"xemelgo",\n\t\t\t\t\t\t"com"\n\t\t\t\t\t],\n\t\t\t\t\t"path": [\n\t\t\t\t\t\t"graphql"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t"response": []\n\t\t},\n\t\t{\n\t\t\t"name": "Create Asset",\n\t\t\t"request": {\n\t\t\t\t"auth": {\n\t\t\t\t\t"type": "noauth"\n\t\t\t\t},\n\t\t\t\t"method": "POST",\n\t\t\t\t"header": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"key": "authorization",\n\t\t\t\t\t\t"value": "{{token}}",\n\t\t\t\t\t\t"type": "text"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"key": "scenario",\n\t\t\t\t\t\t"value": "1",\n\t\t\t\t\t\t"type": "text"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t"body": {\n\t\t\t\t\t"mode": "graphql",\n\t\t\t\t\t"graphql": {\n\t\t\t\t\t\t"query": "mutation {\\n    createAssets(input : { assets: [\\n            {\\n                id: \\"test-1234\\",\\n                typeId:\\"test-Asset-Type\\",\\n                trackerSerial: \\"test-1234\\",\\n                reuseTrackerSerial: true,\\n                customProperties: \\"{\\\\\\"manufacturer\\\\\\":\\\\\\"Manufacturer\\\\\\",\\\\\\"description\\\\\\":\\\\\\"test description\\\\\\"}\\"\\n            }\\n        ]\\n    }\\n    )\\n    {\\n        assetIds\\n    }\\n}",\n\t\t\t\t\t\t"variables": ""\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t"url": {\n\t\t\t\t\t"raw": "https://api.xemelgo.com/graphql",\n\t\t\t\t\t"protocol": "https",\n\t\t\t\t\t"host": [\n\t\t\t\t\t\t"api",\n\t\t\t\t\t\t"xemelgo",\n\t\t\t\t\t\t"com"\n\t\t\t\t\t],\n\t\t\t\t\t"path": [\n\t\t\t\t\t\t"graphql"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t"response": []\n\t\t},\n\t\t{\n\t\t\t"name": "Update Asset",\n\t\t\t"request": {\n\t\t\t\t"auth": {\n\t\t\t\t\t"type": "noauth"\n\t\t\t\t},\n\t\t\t\t"method": "POST",\n\t\t\t\t"header": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"key": "authorization",\n\t\t\t\t\t\t"value": "{{token}}",\n\t\t\t\t\t\t"type": "text"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t"body": {\n\t\t\t\t\t"mode": "graphql",\n\t\t\t\t\t"graphql": {\n\t\t\t\t\t\t"query": "mutation { \\n  updateAssets(input:  \\n  { \\n    assets: [ \\n    { \\n        id: \\"Asset-BIN-02\\" \\n        trackerSerial: \\"20240725000004\\" \\n        typeId:\\"Handheld\\" \\n        dueDate:1725047723000 \\n        locationId:\\"Room 2\\" \\n    }, \\n    { \\n        id: \\"Asset-BIN-03\\" \\n        trackerSerial: \\"20240725000005\\"\\n        typeId:\\"Handheld\\"\\n        dueDate:1725047723000 \\n        locationId:\\"Room\\" \\n    } \\n    ] \\n  }) { \\n    assets { \\n     id \\n     trackerSerial \\n     creationDate \\n     customProperties \\n     description \\n     dueDate \\n     lastUpdatedDate \\n       lastDetectedAtLocation { \\n         id \\n       } \\n     } \\n   } \\n} ",\n\t\t\t\t\t\t"variables": ""\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t"url": {\n\t\t\t\t\t"raw": "https://api.xemelgo.com/graphql",\n\t\t\t\t\t"protocol": "https",\n\t\t\t\t\t"host": [\n\t\t\t\t\t\t"api",\n\t\t\t\t\t\t"xemelgo",\n\t\t\t\t\t\t"com"\n\t\t\t\t\t],\n\t\t\t\t\t"path": [\n\t\t\t\t\t\t"graphql"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t"response": []\n\t\t},\n\t\t{\n\t\t\t"name": "List Assets",\n\t\t\t"request": {\n\t\t\t\t"auth": {\n\t\t\t\t\t"type": "noauth"\n\t\t\t\t},\n\t\t\t\t"method": "POST",\n\t\t\t\t"header": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"key": "Tenant",\n\t\t\t\t\t\t"value": "{{customerId}}",\n\t\t\t\t\t\t"type": "text",\n\t\t\t\t\t\t"disabled": true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"key": "Authorization",\n\t\t\t\t\t\t"value": "{{token}}",\n\t\t\t\t\t\t"type": "text"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t"body": {\n\t\t\t\t\t"mode": "graphql",\n\t\t\t\t\t"graphql": {\n\t\t\t\t\t\t"query": "query assets ($filter: String, $nextToken: String) { \\n  \\tassets (input: {filter: $filter, nextToken: $nextToken}) { \\n  \\t  nextToken \\n  \\t  assets { \\n        id \\n        name \\n        description \\n       \\tlastUpdatedDate \\n       \\tlastDetectedAtLocation { \\n  \\t        id \\n            name \\n       \\t} \\n       \\ttrackerSerial \\n       \\tstate \\n       \\ttype { \\n         \\t  name \\n         \\t  id \\n       \\t} \\n      } \\n   } \\n} ",\n\t\t\t\t\t\t"variables": "{\\n    \\"filter\\": \\"lastUpdatedDate < 1738268405385 and lastUpdatedDate > 1738268405385\\",\\n    \\"nextToken\\": \\"token\\"\\n}"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t"url": {\n\t\t\t\t\t"raw": "https://api.xemelgo.com/graphql",\n\t\t\t\t\t"protocol": "https",\n\t\t\t\t\t"host": [\n\t\t\t\t\t\t"api",\n\t\t\t\t\t\t"xemelgo",\n\t\t\t\t\t\t"com"\n\t\t\t\t\t],\n\t\t\t\t\t"path": [\n\t\t\t\t\t\t"graphql"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t"response": []\n\t\t},\n\t\t{\n\t\t\t"name": "Asset Route",\n\t\t\t"request": {\n\t\t\t\t"auth": {\n\t\t\t\t\t"type": "noauth"\n\t\t\t\t},\n\t\t\t\t"method": "POST",\n\t\t\t\t"header": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"key": "Tenant",\n\t\t\t\t\t\t"value": "{{customerId}}",\n\t\t\t\t\t\t"type": "text"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"key": "Authorization",\n\t\t\t\t\t\t"value": "{{token}}",\n\t\t\t\t\t\t"type": "text"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t"body": {\n\t\t\t\t\t"mode": "graphql",\n\t\t\t\t\t"graphql": {\n\t\t\t\t\t\t"query": "query assetRoute ($id: String!, $startDate: AWSTimestamp, $endDate: AWSTimestamp, $nextToken: String) {\\n  assetRoute(input: { id: $id, startDate: $startDate, endDate: $endDate, nextToken: $nextToken }) {\\n        route {\\n            location {\\n                id\\n                name\\n            },\\n            state,\\n            startDate,\\n            endDate,\\n            duration\\n        }\\n    }\\n  }",\n\t\t\t\t\t\t"variables": "{\\n    \\"id\\": \\"120\\",\\n    \\"startDate\\": 1719730800000,\\n    \\"endDate\\": 1719903600000 \\n}"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t"url": {\n\t\t\t\t\t"raw": "https://api.xemelgo.com/graphql",\n\t\t\t\t\t"protocol": "https",\n\t\t\t\t\t"host": [\n\t\t\t\t\t\t"api",\n\t\t\t\t\t\t"xemelgo",\n\t\t\t\t\t\t"com"\n\t\t\t\t\t],\n\t\t\t\t\t"path": [\n\t\t\t\t\t\t"graphql"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t"response": []\n\t\t}\n\t]\n}\n'})}),"\n",(0,a.jsx)(e.hr,{}),"\n",(0,a.jsx)(e.h2,{id:"errors",children:(0,a.jsx)("span",{style:{color:"#004FDB"},children:"Errors"})}),"\n",(0,a.jsxs)(e.table,{children:[(0,a.jsx)(e.thead,{children:(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.th,{children:"Error"}),(0,a.jsx)(e.th,{children:"Code"}),(0,a.jsx)(e.th,{children:"Description"})]})}),(0,a.jsxs)(e.tbody,{children:[(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"Expired token"}),(0,a.jsx)(e.td,{children:"401"}),(0,a.jsx)(e.td,{children:"Unauthorized"})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"Invalid token"}),(0,a.jsx)(e.td,{children:"401"}),(0,a.jsx)(e.td,{children:"Unauthorized"})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"Missing Auth Header"}),(0,a.jsx)(e.td,{children:"401"}),(0,a.jsx)(e.td,{children:"Unauthorized"})]})]})]}),"\n",(0,a.jsx)(e.h4,{id:"error-responses",children:"Error Responses"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n  "errors": [\n    {\n      "errorType": "UnauthorizedException",\n      "message": "Token has expired."\n    }\n  ]\n}\n'})})]})}function c(t={}){const{wrapper:e}={...(0,r.R)(),...t.components};return e?(0,a.jsx)(e,{...t,children:(0,a.jsx)(p,{...t})}):p(t)}},8453:(t,e,n)=>{n.d(e,{R:()=>i,x:()=>l});var s=n(6540);const a={},r=s.createContext(a);function i(t){const e=s.useContext(r);return s.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function l(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(a):t.components||a:i(t.components),s.createElement(r.Provider,{value:e},t.children)}}}]);